{"version":3,"file":"static/js/669.504871a4.chunk.js","mappings":"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","sources":["components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.jsx","pages/MovieDetailsPage/MovieDetailsPage.styled.jsx","pages/MovieDetailsPage/MovieDetailsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nconst MovieCardStyled = styled.div`\n  display: flex;\n  align-items: flex-start;\n  justify-content: center;\n  flex-direction: column;\n  gap: 20px;\n  padding: 20px 0;\n\n  ${({ theme }) => theme.media.tablet} {\n    flex-direction: row;\n  }\n\n  & .moviecard__image {\n    width: 100%;\n  }\n  & .moviecard__title {\n    margin-bottom: 15px;\n\n    font-weight: bold;\n    font-size: 22px;\n  }\n\n  & .moviecard__votes,\n  & .moviecard__overview {\n    margin-bottom: 15px;\n\n    font-size: 18px;\n  }\n\n  & .moviecard__genres {\n    display: flex;\n    align-items: center;\n    justify-content: flex-start;\n    gap: 10px;\n    font-size: 18px;\n  }\n\n  & .moviecard__subtitle {\n    margin-bottom: 10px;\n\n    font-weight: bold;\n    font-size: 20px;\n  }\n`;\n\nexport default MovieCardStyled;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MovieCardStyled from './MovieCard.styled';\nimport Loader from 'components/Loader/Loader';\nimport { Button } from 'components/App/App.styled';\nimport { useUser } from 'utils/userContext';\n\nexport default function MovieCard({ movieData }) {\n  const { isLoggedIn, addMovieToFavourites } = useUser();\n\n  const {\n    id,\n    poster_path,\n    overview,\n    vote_average,\n    genres,\n    title,\n    release_date,\n  } = movieData;\n\n  function handleAddToFavouritesBtnClick() {\n    addMovieToFavourites({\n      id,\n      poster_path,\n      title,\n      release_date,\n      vote_average,\n    });\n  }\n\n  return (\n    <>\n      {Object.keys(movieData).length === 0 ? (\n        <Loader />\n      ) : (\n        <MovieCardStyled className=\"moviecard\">\n          <img\n            src={`https://image.tmdb.org/t/p/w300/${poster_path}`}\n            alt={title}\n            className=\"moviecard__image\"\n          />\n\n          <div className=\"moviecard__info\">\n            <h4 className=\"moviecard__title\">\n              {title}\n              <span>({release_date.slice(0, 4)})</span>\n            </h4>\n            <p className=\"moviecard__votes\">User score: {vote_average}</p>\n\n            {isLoggedIn && (\n              <Button\n                type=\"button\"\n                className=\"moviecard__addToFavouritesBtn\"\n                onClick={handleAddToFavouritesBtnClick}\n              >\n                Add to favourites\n              </Button>\n            )}\n\n            <h5 className=\"moviecard__subtitle\">Overview</h5>\n            <p className=\"moviecard__overview\">{overview}</p>\n            <h5 className=\"moviecard__subtitle\">Genres</h5>\n            <p className=\"moviecard__genres\">\n              {genres.map(genre => (\n                <span key={genre.id} className=\"moviecard__genreName\">\n                  {genre.name}\n                </span>\n              ))}\n            </p>\n          </div>\n        </MovieCardStyled>\n      )}\n    </>\n  );\n}\n\nMovieCard.propTypes = {\n  movieData: PropTypes.shape({\n    poster_path: PropTypes.string,\n    overview: PropTypes.string,\n    vote_average: PropTypes.number,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        name: PropTypes.string.isRequired,\n      })\n    ),\n    title: PropTypes.string,\n    release_date: PropTypes.string,\n  }).isRequired,\n};\n","import styled from 'styled-components';\n\nconst MovieDetailsPageStyled = styled.div`\n  & .movieDetails__backlink-box {\n    width: 120px;\n    display: flex;\n    align-items: center;\n    justify-content: flex-start;\n    gap: 10px;\n    transition: color ${({ theme }) => theme.cubic};\n\n    &:hover,\n    &:hover .movieDetails__backlink,\n    &:focus,\n    &:focus .movieDetails__backlink {\n      color: ${({ theme }) => theme.colors.accent};\n    }\n  }\n\n  & .additional__title {\n    text-align: center;\n    margin-bottom: 10px;\n  }\n  & .additional__nav {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 20px;\n  }\n\n  & .additional__navlink {\n    color: ${({ theme }) => theme.colors.black};\n\n    transition: color ${({ theme }) => theme.cubic},\n      font-weight ${({ theme }) => theme.cubic};\n\n    &:hover,\n    &:focus {\n      color: ${({ theme }) => theme.colors.accent};\n    }\n\n    &.active {\n      color: ${({ theme }) => theme.colors.accent};\n      font-weight: 600;\n    }\n  }\n`;\nexport default MovieDetailsPageStyled;\n","import React, { Suspense, useEffect, useState } from 'react';\nimport {\n  Link,\n  NavLink,\n  Outlet,\n  useLocation,\n  useParams,\n} from 'react-router-dom';\nimport { RiArrowGoBackLine } from 'react-icons/ri';\n\nimport { tmdb_API } from 'components/App/App';\nimport Loader from 'components/Loader/Loader';\nimport MovieCard from 'components/MovieCard';\nimport Section from 'components/Section';\nimport MovieDetailsPageStyled from './MovieDetailsPage.styled';\n\nexport default function MovieDetailsPage() {\n  const [movieData, setMovieData] = useState({});\n\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkRef =\n    location.state?.from?.pathname ?? location.state?.from.location ?? '../';\n\n  useEffect(() => {\n    async function getMovieData() {\n      try {\n        const response = await tmdb_API.fetchById(movieId);\n        setMovieData(response.data);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n    getMovieData();\n  }, [movieId]);\n\n  return (\n    <Section className=\"section--movie-details movieDetails\">\n      <MovieDetailsPageStyled>\n        <div className=\"movieDetails__backlink-box\">\n          <RiArrowGoBackLine />\n          <Link\n            to={backLinkRef}\n            state={{\n              from: {\n                // location:\n                //   location?.state?.from.location.state?.from.location ??\n                location,\n              },\n            }}\n            className=\"movieDetails__backlink\"\n          >\n            Go back\n          </Link>\n        </div>\n\n        <MovieCard movieData={movieData} />\n        <div className=\"movieDetails__additional additional\">\n          <h4 className=\"additional__title\">Additional information</h4>\n          <nav className=\"additional__nav\">\n            <NavLink\n              to={'cast'}\n              state={{ from: { location } }}\n              className=\"additional__navlink link\"\n            >\n              Cast\n            </NavLink>\n            <NavLink\n              to={'reviews'}\n              state={{ from: { location } }}\n              className=\"additional__navlink link\"\n            >\n              Revies\n            </NavLink>\n          </nav>\n        </div>\n      </MovieDetailsPageStyled>\n\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </Section>\n  );\n}\n"],"names":["styled","theme","media","tablet","MovieCard","movieData","useUser","isLoggedIn","addMovieToFavourites","id","poster_path","overview","vote_average","genres","title","release_date","Object","keys","length","Loader","className","src","alt","slice","type","onClick","map","genre","name","cubic","colors","accent","black","MovieDetailsPage","useState","setMovieData","movieId","useParams","location","useLocation","backLinkRef","state","from","pathname","useEffect","tmdb_API","response","data","console","error","getMovieData","Section","to","Suspense","fallback"],"sourceRoot":""}