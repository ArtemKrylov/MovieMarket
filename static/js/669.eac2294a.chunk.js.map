{"version":3,"file":"static/js/669.eac2294a.chunk.js","mappings":"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","sources":["components/Section/Section.styled.jsx","components/Section/Section.jsx","components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.jsx","pages/MovieDetailsPage/MovieDetailsPage.styled.jsx","pages/MovieDetailsPage/MovieDetailsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Section } from './Section';\n\nconst SectionStyled = styled(Section)`\n  padding-top: 15px;\n  padding-bottom: 15px;\n\n  & .section-title {\n    margin-bottom: 5px;\n\n    text-align: center;\n    font-weight: 900;\n    font-family: 'Tourney', cursive;\n  }\n\n  ${props => props.theme.media.tablet} {\n    padding-top: 20px;\n    padding-bottom: 20px;\n  }\n  ${props => props.theme.media.desktop} {\n    padding-top: 25px;\n    padding-bottom: 25px;\n  }\n`;\n\nexport default SectionStyled;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Container } from 'components/App/App.styled';\n\nexport const Section = ({ title, className = 'section', children }) => {\n  return (\n    <section className={`section ${className}`}>\n      <Container className=\"container\">\n        {title && (\n          <h3 className={`${className}__title section-title`}>{title}</h3>\n        )}\n        {children}\n      </Container>\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  className: PropTypes.string,\n  children: PropTypes.node,\n};\n","import styled from 'styled-components';\n\nconst MovieCardStyled = styled.div`\n  display: flex;\n  align-items: flex-start;\n  justify-content: center;\n  flex-direction: column;\n  gap: 20px;\n  padding: 20px 0;\n\n  ${({ theme }) => theme.media.tablet} {\n    flex-direction: row;\n  }\n\n  & .moviecard__image {\n    width: 100%;\n  }\n  & .moviecard__title {\n    margin-bottom: 15px;\n\n    font-weight: bold;\n    font-size: 22px;\n  }\n\n  & .moviecard__votes,\n  & .moviecard__overview {\n    margin-bottom: 15px;\n\n    font-size: 18px;\n  }\n\n  & .moviecard__genres {\n    display: flex;\n    align-items: center;\n    justify-content: flex-start;\n    gap: 10px;\n    font-size: 18px;\n  }\n\n  & .moviecard__subtitle {\n    margin-bottom: 10px;\n\n    font-weight: bold;\n    font-size: 20px;\n  }\n`;\n\nexport default MovieCardStyled;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MovieCardStyled from './MovieCard.styled';\n\nexport default function MovieCard({ movieData }) {\n  if (Object.keys(movieData).length === 0) return;\n\n  const { poster_path, overview, vote_average, genres, title, release_date } =\n    movieData;\n\n  return (\n    <MovieCardStyled className=\"moviecard\">\n      <img\n        src={`https://image.tmdb.org/t/p/w300/${poster_path}`}\n        alt={title}\n        className=\"moviecard__image\"\n      />\n      <div className=\"moviecard__info\">\n        <h4 className=\"moviecard__title\">\n          {title}\n          <span>({release_date.slice(0, 4)})</span>\n        </h4>\n        <p className=\"moviecard__votes\">User score: {vote_average}</p>\n        <h5 className=\"moviecard__subtitle\">Overview</h5>\n        <p className=\"moviecard__overview\">{overview}</p>\n        <h5 className=\"moviecard__subtitle\">Genres</h5>\n        <p className=\"moviecard__genres\">\n          {genres.map(genre => (\n            <span key={genre.id} className=\"moviecard__genreName\">\n              {genre.name}\n            </span>\n          ))}\n        </p>\n      </div>\n    </MovieCardStyled>\n  );\n}\n\nMovieCard.propTypes = {\n  movieData: PropTypes.shape({\n    poster_path: PropTypes.string,\n    overview: PropTypes.string,\n    vote_average: PropTypes.number,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        name: PropTypes.string.isRequired,\n      })\n    ),\n    title: PropTypes.string,\n    release_date: PropTypes.string,\n  }).isRequired,\n};\n","import styled from 'styled-components';\n\nconst MovieDetailsPageStyled = styled.div`\n  & .movieDetails__backlink-box {\n    width: 120px;\n    display: flex;\n    align-items: center;\n    justify-content: flex-start;\n    gap: 10px;\n    transition: color ${({ theme }) => theme.cubic};\n\n    &:hover,\n    &:hover .movieDetails__backlink,\n    &:focus,\n    &:focus .movieDetails__backlink {\n      color: ${({ theme }) => theme.colors.accent};\n    }\n  }\n\n  & .additional__title {\n    text-align: center;\n    margin-bottom: 10px;\n  }\n  & .additional__nav {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 20px;\n  }\n\n  & .additional__navlink {\n    color: ${({ theme }) => theme.colors.black};\n\n    transition: color ${({ theme }) => theme.cubic},\n      font-weight ${({ theme }) => theme.cubic};\n\n    &:hover,\n    &:focus {\n      color: ${({ theme }) => theme.colors.accent};\n    }\n\n    &.active {\n      color: ${({ theme }) => theme.colors.accent};\n      font-weight: 600;\n    }\n  }\n`;\nexport default MovieDetailsPageStyled;\n","import React, { Suspense, useEffect, useState } from 'react';\nimport {\n  Link,\n  NavLink,\n  Outlet,\n  useLocation,\n  useParams,\n} from 'react-router-dom';\nimport { RiArrowGoBackLine } from 'react-icons/ri';\n\nimport { tmdb_API } from 'components/App/App';\nimport Loader from 'components/Loader/Loader';\nimport MovieCard from 'components/MovieCard';\nimport Section from 'components/Section';\nimport MovieDetailsPageStyled from './MovieDetailsPage.styled';\n\nexport default function MovieDetailsPage() {\n  const [movieData, setMovieData] = useState({});\n\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkRef = location.state?.from.location ?? './';\n\n  useEffect(() => {\n    async function getMovieData() {\n      try {\n        const response = await tmdb_API.fetchById(movieId);\n        setMovieData(response.data);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n    getMovieData();\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Section className=\"section--movie-details movieDetails\">\n      <MovieDetailsPageStyled>\n        <div className=\"movieDetails__backlink-box\">\n          <RiArrowGoBackLine />\n          <Link\n            to={backLinkRef}\n            from={location}\n            className=\"movieDetails__backlink\"\n          >\n            Go back\n          </Link>\n        </div>\n\n        <MovieCard movieData={movieData} />\n        <div className=\"movieDetails__additional additional\">\n          <h4 className=\"additional__title\">Additional information</h4>\n          <nav className=\"additional__nav\">\n            <NavLink\n              to={'cast'}\n              from={location}\n              className=\"additional__navlink link\"\n            >\n              Cast\n            </NavLink>\n            <NavLink\n              to={'reviews'}\n              from={location}\n              className=\"additional__navlink link\"\n            >\n              Revies\n            </NavLink>\n          </nav>\n        </div>\n      </MovieDetailsPageStyled>\n\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </Section>\n  );\n}\n"],"names":["styled","title","className","children","props","theme","media","tablet","desktop","MovieCard","movieData","Object","keys","length","poster_path","overview","vote_average","genres","release_date","src","alt","slice","map","genre","name","id","cubic","colors","accent","black","MovieDetailsPage","useState","setMovieData","movieId","useParams","location","useLocation","backLinkRef","state","from","useEffect","tmdb_API","response","data","console","error","getMovieData","Section","to","Suspense","fallback","Loader"],"sourceRoot":""}