{"version":3,"file":"static/js/919.9d410236.chunk.js","mappings":"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","sources":["components/Section/Section.styled.jsx","components/Section/Section.jsx","utils/constants.js","components/SearchForm/SearchFrom.styled.jsx","components/SearchForm/SearchForm.jsx","utils/functions.js","components/QueryGalleryItem/QueryGalleryItem.styled.jsx","components/QueryGalleryItem/QueryGalleryItem.jsx","components/QueryGallery/QueryGallery.styled.jsx","components/QueryGallery/QueryGallery.jsx","pages/MoviesPage/MoviesPage.styled.jsx","pages/MoviesPage/MoviesPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Section } from './Section';\n\nconst SectionStyled = styled(Section)`\n  padding-top: 15px;\n  padding-bottom: 15px;\n\n  & .section-title {\n    margin-bottom: 5px;\n\n    text-align: center;\n    font-weight: 900;\n    font-family: 'Tourney', cursive;\n  }\n\n  ${props => props.theme.media.tablet} {\n    padding-top: 20px;\n    padding-bottom: 20px;\n  }\n  ${props => props.theme.media.desktop} {\n    padding-top: 25px;\n    padding-bottom: 25px;\n  }\n`;\n\nexport default SectionStyled;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Container } from 'components/App/App.styled';\n\nexport const Section = ({ title, className = 'section', children }) => {\n  return (\n    <section className={`section ${className}`}>\n      <Container className=\"container\">\n        {title && (\n          <h3 className={`${className}__title section-title`}>{title}</h3>\n        )}\n        {children}\n      </Container>\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  className: PropTypes.string,\n  children: PropTypes.node,\n};\n","export const STATUS_MACHINE = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n","import styled from 'styled-components';\n\nconst SearchFormStyled = styled.form`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  padding: 30px 0;\n`;\n\nexport default SearchFormStyled;\n","import PropTypes from 'prop-types';\nimport { toast } from 'react-hot-toast';\n\nimport { Button, Input } from 'components/App/App.styled';\nimport { isStringEmpty } from 'utils';\nimport SearchFormStyled from './SearchFrom.styled';\n\nexport default function SearchForm({ handleQuery }) {\n  function handleSearchFormSubmit(evt) {\n    evt.preventDefault();\n    const input = evt.target.elements.queryInput.value;\n    if (isStringEmpty(input)) {\n      toast.error('Empty query! Please write something!');\n      evt.target.reset();\n      return;\n    }\n    handleQuery(input);\n    evt.target.reset();\n  }\n\n  return (\n    <SearchFormStyled\n      name=\"movieSearch\"\n      className=\"movieSearch\"\n      onSubmit={handleSearchFormSubmit}\n    >\n      <Input\n        type=\"text\"\n        name=\"queryInput\"\n        className=\"movieSearch__input\"\n        required\n        autoFocus\n        autoComplete=\"off\"\n      />\n      <Button type=\"submit\" className=\"movieSearch__submit\">\n        Search\n      </Button>\n    </SearchFormStyled>\n  );\n}\nSearchForm.propTypes = {\n  handleQuery: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n};\n","//for some funtions\nexport function isStringEmpty(str) {\n  return /^\\s*$/.test(str);\n}\n\nexport function scrollToTop() {\n  window.scroll({\n    top: 0,\n    left: 0,\n    behavior: 'smooth',\n  });\n}\n","import styled from 'styled-components';\n\nexport const QueryGalleryItemStyled = styled.li`\n  padding: 10px;\n  border: 1px solid ${({ theme }) => theme.colors.accent};\n  border-radius: ${({ theme }) => theme.borderRadius};\n  background-color: ${({ theme }) => theme.colors.accent2};\n\n  & .queryGalleryItem__link {\n    display: inline-block;\n    margin-left: 10px;\n    margin-bottom: 10px;\n    font-weight: 600;\n    transition: color ${({ theme }) => theme.cubic};\n\n    &:hover,\n    &:focus {\n      color: ${({ theme }) => theme.colors.white};\n    }\n  }\n\n  & .queryGalleryItem__vote {\n    margin-bottom: 5px;\n    margin-left: 5px;\n    font-size: 16px;\n    font-style: italic;\n  }\n\n  & .queryGalleryItem__overviewBtn {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 5px;\n    margin: 0 auto;\n    font-size: 18px;\n    padding: 5px 10px;\n  }\n\n  & .queryGalleryItem__overview {\n    margin-top: 15px;\n    text-align: center;\n    font-size: 16px;\n    font-style: italic;\n  }\n`;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport { BsFillCaretDownFill, BsFillCaretUpFill } from 'react-icons/bs';\n\nimport { QueryGalleryItemStyled } from './QueryGalleryItem.styled';\nimport { Button } from 'components/App/App.styled';\n\nexport default function QueryGalleryItem({ data }) {\n  const [isOverViewShown, setIsOverViewShown] = useState(false);\n  const { title, id, overview, vote_average, release_date } = data;\n  const location = useLocation();\n\n  function handleShowOverViewBtn() {\n    setIsOverViewShown(prev => !prev);\n  }\n  return (\n    <QueryGalleryItemStyled className=\"queryGalleryItem\">\n      <Link\n        to={`${id}`}\n        state={{ from: { location } }}\n        className={'queryGalleryItem__link'}\n      >\n        üçø {title} ({release_date.slice(0, 4)})\n      </Link>\n      <p className=\"queryGalleryItem__vote\">\n        Average vote: {vote_average ?? `no votes`}\n      </p>\n      <Button\n        type=\"button\"\n        onClick={handleShowOverViewBtn}\n        className=\"queryGalleryItem__overviewBtn\"\n      >\n        <span>Overview</span>\n        {isOverViewShown ? <BsFillCaretUpFill /> : <BsFillCaretDownFill />}\n      </Button>\n      {isOverViewShown && (\n        <p className=\"queryGalleryItem__overview\">\n          {overview ?? `no overview`}\n        </p>\n      )}\n    </QueryGalleryItemStyled>\n  );\n}\nQueryGalleryItem.propTypes = {\n  data: PropTypes.shape({}).isRequired,\n};\n","import styled from 'styled-components';\n\nconst QueryGalleryStyled = styled.div`\n  &.queryGallery--idle,\n  &.queryGallery--rejected,\n  &.queryGallery--pending,\n  &.queryGallery--nothingFound {\n    padding: 30px 0;\n    text-align: center;\n    font-weight: 700;\n    font-size: 24px;\n    color: ${({ theme }) => theme.colors.accent};\n    text-shadow: ${({ theme }) => theme.shadows.fontBlack};\n  }\n\n  & .queryGallery__list {\n    display: flex;\n\n    justify-content: center;\n    flex-direction: column;\n    gap: 25px;\n  }\n`;\n\nexport default QueryGalleryStyled;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { STATUS_MACHINE } from 'utils';\nimport QueryGalleryItem from 'components/QueryGalleryItem';\nimport QueryGalleryStyled from './QueryGallery.styled';\nimport Loader from 'components/Loader/Loader';\n\nexport default function QueryGallery({ querySearchResults, status }) {\n  switch (status) {\n    case STATUS_MACHINE.IDLE:\n      return (\n        <QueryGalleryStyled className=\"queryGallery--idle\">\n          Search something\n        </QueryGalleryStyled>\n      );\n\n    case STATUS_MACHINE.PENDING:\n      return (\n        <QueryGalleryStyled className=\"queryGallery--pending\">\n          <p>Pending...</p>\n          <Loader />\n        </QueryGalleryStyled>\n      );\n    case STATUS_MACHINE.REJECTED:\n      return (\n        <QueryGalleryStyled className=\"queryGallery--rejected\">\n          Something went wrong! Please, try again!\n        </QueryGalleryStyled>\n      );\n    case STATUS_MACHINE.RESOLVED:\n      if (querySearchResults.length === 0) {\n        return (\n          <QueryGalleryStyled className=\"queryGallery--nothingFound\">\n            Nothing found!\n          </QueryGalleryStyled>\n        );\n      }\n      return (\n        <QueryGalleryStyled className=\"queryGallery\">\n          <ul className=\"queryGallery__list\">\n            {querySearchResults.map(item => (\n              <QueryGalleryItem key={item.id} data={item} />\n            ))}\n          </ul>\n        </QueryGalleryStyled>\n      );\n    default:\n      throw new Error('Wrong status for STATUS_MACHINE');\n  }\n}\nQueryGallery.propTypes = {\n  querySearchResults: PropTypes.arrayOf(PropTypes.shape({}).isRequired),\n  status: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const MoviesPageStyled = styled.div`\n  & .movies__searchQuery,\n  & .movies__page {\n    margin-bottom: 15px;\n    text-align: center;\n  }\n\n  & .pagination--movies {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-wrap: wrap;\n    gap: 5px;\n    padding: 20px 10px;\n\n    & li {\n      padding: 5px;\n      border: 1px solid ${({ theme }) => theme.colors.accent2};\n      border-radius: ${({ theme }) => theme.borderRadius};\n      cursor: pointer;\n\n      &.disabled {\n        position: absolute;\n        width: 1px;\n        height: 1px;\n        margin: -1px;\n        padding: 0;\n        overflow: hidden;\n        border: 0;\n        clip: rect(0 0 0 0);\n      }\n\n      &.selected {\n        padding: 7px;\n        background-color: ${({ theme }) => theme.colors.accent2};\n        color: ${({ theme }) => theme.colors.white};\n      }\n\n      &:hover,\n      &:focus {\n        background-color: ${({ theme }) => theme.colors.accent2};\n        color: ${({ theme }) => theme.colors.white};\n      }\n    }\n  }\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport SearchForm from 'components/SearchForm';\nimport Section from 'components/Section';\nimport { tmdb_API } from 'components/App/App';\nimport { scrollToTop, STATUS_MACHINE } from 'utils';\nimport QueryGallery from 'components/QueryGallery';\nimport ReactPaginate from 'react-paginate';\nimport { MoviesPageStyled } from './MoviesPage.styled';\nimport { toast } from 'react-hot-toast';\n\nexport default function MoviesPage() {\n  const [querySearchResults, setQuerySearchResults] = useState([]);\n  const [totalPages, setTotalPages] = useState(1); //total pages for pagination\n  const [status, setStatus] = useState(STATUS_MACHINE.IDLE); //status for QueryGallery state machine\n\n  //searchParams\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n  const page = searchParams.get('page') ?? 1;\n\n  //when query changes - do fecthByQuery\n  useEffect(() => {\n    async function getQuerySearch(query) {\n      try {\n        setStatus(STATUS_MACHINE.PENDING);\n        const response = await tmdb_API.fetchByQuery(query, page);\n        const { results, total_pages } = response.data;\n        setQuerySearchResults(results);\n        setSearchParams({ query, page });\n        setTotalPages(total_pages);\n        // setPages(total_pages);\n        setStatus(STATUS_MACHINE.RESOLVED);\n      } catch (error) {\n        console.error(error);\n        setStatus(STATUS_MACHINE.REJECTED);\n      }\n    }\n    if (query === null) return;\n    getQuerySearch(query);\n  }, [query, page, setSearchParams]);\n\n  function handleQuery(newQuery) {\n    setSearchParams(prev => {\n      if (prev.get(`query`) === newQuery) {\n        toast.error('The same query! Please try a different one!');\n        return prev;\n      }\n      return { page, query: newQuery };\n    });\n  }\n\n  function handlePageClick({ selected }) {\n    setSearchParams({ query, page: selected + 1 });\n    scrollToTop();\n  }\n\n  return (\n    <Section className=\"section--movies movies\">\n      <MoviesPageStyled>\n        <SearchForm handleQuery={handleQuery} value={query ?? ''} />\n\n        {query && (\n          <p className=\"movies__searchQuery\">\n            <b>Search query:</b> {query}\n          </p>\n        )}\n        {page > 1 && (\n          <p className=\"movies__page\">\n            <b>Page: </b>\n            {page}\n          </p>\n        )}\n\n        <QueryGallery querySearchResults={querySearchResults} status={status} />\n\n        {totalPages > 1 && (\n          <ReactPaginate\n            breakLabel=\"...\"\n            nextLabel=\"next >\"\n            onPageChange={handlePageClick}\n            pageRangeDisplayed={5}\n            pageCount={totalPages}\n            previousLabel=\"< previous\"\n            renderOnZeroPageCount={null}\n            className=\"pagination--movies\"\n            forcePage={page - 1}\n          />\n        )}\n      </MoviesPageStyled>\n    </Section>\n  );\n}\n"],"names":["styled","title","className","children","props","theme","media","tablet","desktop","STATUS_MACHINE","IDLE","PENDING","RESOLVED","REJECTED","SearchForm","handleQuery","name","onSubmit","evt","preventDefault","input","target","elements","queryInput","value","test","toast","reset","type","required","autoFocus","autoComplete","QueryGalleryItemStyled","colors","accent","borderRadius","accent2","cubic","white","QueryGalleryItem","data","useState","isOverViewShown","setIsOverViewShown","id","overview","vote_average","release_date","location","useLocation","to","state","from","slice","onClick","prev","shadows","fontBlack","QueryGallery","querySearchResults","status","Loader","length","map","item","Error","MoviesPageStyled","MoviesPage","setQuerySearchResults","totalPages","setTotalPages","setStatus","useSearchParams","searchParams","setSearchParams","query","get","page","useEffect","tmdb_API","response","results","total_pages","console","error","getQuerySearch","Section","newQuery","breakLabel","nextLabel","onPageChange","selected","window","scroll","top","left","behavior","pageRangeDisplayed","pageCount","previousLabel","renderOnZeroPageCount","forcePage"],"sourceRoot":""}